class Solution {
    
    Map<Integer, Double> memo = new HashMap<>();
    public double myPow(double x, int n) {
        boolean isNeg = false;
        if(n < 0){
            n = n*-1;
            return 1/ pow(x, n);
        }else{
            return pow(x, n);
        }
        
        
    }
    
    public double pow(double x, int n){
        
        if(n == 1){
            return x;
        }
        if(n == 0){
            return 1;
        }
        
        if(memo.containsKey(n)){
            return memo.get(n);
        }
        
        double prod = 1;
        int m = n/2; 
        
        if(n%2 == 0){
            prod = pow(x, m) * pow(x, m);
        }else{
            prod = pow(x, m) * pow(x, m + 1);
        }
        
        memo.put(n, prod);
        
        return prod;
    }
}
