class Solution {
    public List<List<Integer>> permute(int[] nums) {
        
        int n = nums.length;
        
        LinkedList<List<Integer>> queue = new LinkedList<>();
        
        List<List<Integer>> result = new ArrayList<>();
        
        queue.add(new ArrayList<>());
        int idx = -1;
        
        while(!queue.isEmpty()){
            int size = queue.size();
            if(idx >= n){
                break;
            }
            idx++;
            for(int i = 0; i<size; i++){
                List<Integer> lst = queue.removeFirst();
                
                if(lst.size() == n){
                    result.add(lst);
                }else{
                    for(int j = 0; j<=lst.size(); j++){
                        List<Integer> temp = new ArrayList<>(lst);
                        temp.add(j, nums[idx]);
                        queue.add(temp);
                    }
                    
                }
            }
        }
        
        return result;
        
    }
}
