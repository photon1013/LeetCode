class Solution {
    public boolean exist(char[][] board, String word) {
        
        int r = board.length;
        int c = board[0].length;
        
        for(int i = 0; i<r; i++){
            for(int j = 0; j<c; j++){
                char ch = board[i][j];
                if(ch == word.charAt(0)){
                    int[][] visited = new int[r][c];
                    if(search(board, i, j, word, visited, 0, r, c)){
                        return true;
                    }
                }
            }
        }
        return false;
    }
    
    boolean search(char[][] board, int i, int j, String word, int[][] visited, int index, int r, int c){
        if(index == word.length()){
            return true;
        }
        if(i<0 || j<0 || i>=r || j>=c || board[i][j] != word.charAt(index) || visited[i][j] == 1){
            return false;
        }
        visited[i][j] = 1;
        
        boolean ans = search(board, i+1, j, word, visited, index+1, r, c) ||
        search(board, i, j+1, word, visited, index+1, r, c) ||
        search(board, i-1, j, word, visited, index+1, r, c) ||
        search(board, i, j-1, word, visited, index+1, r, c);
        
        visited[i][j] = 0;
        
        return ans;
        
    }
}
