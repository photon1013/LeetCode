class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        
        int m = obstacleGrid.length;
        int n = obstacleGrid[0].length;
        
        if(obstacleGrid[0][0] == 1){
            return 0;
        }
        
        int[][] path = new int[m][n];
        path[0][0] = 1;
        
        for(int i = 1; i<n; i++){
            if(path[0][i-1] == 1 && obstacleGrid[0][i] != 1){
                path[0][i] = 1;
            }
        }
        
        for(int j = 1; j<m; j++){
            if(path[j-1][0] == 1 && obstacleGrid[j][0] != 1){
                path[j][0] = 1;
            }
        }
        
        for(int i = 1; i<m; i++){
            for(int j = 1; j<n; j++){
                if(obstacleGrid[i][j] == 0){
                    path[i][j] += path[i-1][j] + path[i][j-1];
                }
            }
        }
        
        return path[m-1][n-1];
        
    }
}
